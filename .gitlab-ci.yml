stages:
  - test
  - build-push
  - pack
  - deploy
  
.ssh_defaults:
  image: registry.qpilipp.ru/psu-mkr-2024/1-infinity/child-prog/child-ssh-client:latest
  before_script:
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -p $REMOTE_PORT $REMOTE_HOST >> ~/.ssh/known_hosts
    - chmod 664 ~/.ssh/known_hosts

test:
  stage: test
  image: python:3.8
  before_script:
   - pip install -r requirements.txt
  script:
    - python manage.py test school users

build-push:
  rules:
    - if: '$CI_COMMIT_TAG != null'
      when: manual
  image: docker:20.10

  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ''

  services:
    - docker:20.10.16-dind
  stage: pack

  before_script:
    - export IMAGE=$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - time docker build -t $IMAGE -f docker/Dockerfile .
    - docker push $IMAGE

deploy:
    when: manual
    extends:
      .ssh_defaults
    stage: deploy
    script:
    - export CI_COMMIT_TAG=0.0.4
    - ssh $REMOTE_USER@$REMOTE_HOST -p $REMOTE_PORT docker login -u $LOGIN_GITLAB -p $PASSWORD_GITLAB $CI_REGISTRY
    - ssh $REMOTE_USER@$REMOTE_HOST -p $REMOTE_PORT rm -fr child
    - ssh $REMOTE_USER@$REMOTE_HOST -p $REMOTE_PORT mkdir -p child/docker
    - scp -P $REMOTE_PORT "docker/docker-compose.yml" $REMOTE_USER@$REMOTE_HOST:child/docker/docker-compose.yml
    - scp -P $REMOTE_PORT "db.sqlite3" $REMOTE_USER@$REMOTE_HOST:child/db.sqlite3
    - ssh $REMOTE_USER@$REMOTE_HOST -p $REMOTE_PORT echo $CI_COMMIT_TAG > child/tag.env
    - ssh $REMOTE_USER@$REMOTE_HOST -p $REMOTE_PORT export $(cat child/tag.env | xargs) && docker-compose -f child/docker/docker-compose.yml up -d
